<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Francis Begyn</title>
    <link>https://blog.francisbegyn.be/</link>
    <description>Recent content on Francis Begyn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 07 Apr 2018 13:46:12 +0200</lastBuildDate>
    
        <atom:link href="https://blog.francisbegyn.be/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ledger&#43;gdrive</title>
      <link>https://blog.francisbegyn.be/posts/ledger&#43;gdrive/</link>
      <pubDate>Sat, 07 Apr 2018 13:46:12 +0200</pubDate>
      
      <guid>https://blog.francisbegyn.be/posts/ledger&#43;gdrive/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been dabbling around with a few personal finance tools, but never found anything that really satisfies my minimalistic, functional needs while I can still access it from everywhere. (H)Ledger is the right kind of functionality and minimalistic tool that I need, but gettting it distributed is a hassle.
On my phone I&amp;rsquo;ve been using My Budget Book, which is a fantastic application, but it&amp;rsquo;s a hassle to get things synced and there is no way to get it on my computer.&lt;/p&gt;

&lt;p&gt;So today I got enough of it and decided to figure out a simple way to work this out, my solution, 3 short bash scripts that could be 1 if I wanted. A pull and push script, and a script that calls them al in order.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pull-journal.sh&lt;/code&gt; is basically a oneliner that use rclone to sync my gdrive to my local folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
echo &amp;quot;Pulling journal from gdrive ...&amp;quot;
rclone -v sync &amp;lt;remote&amp;gt;:&amp;lt;path&amp;gt;/&amp;lt;to&amp;gt;/&amp;lt;file&amp;gt; /&amp;lt;path&amp;gt;/&amp;lt;to&amp;gt;/&amp;lt;journal-folder&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;push-journal.sh&lt;/code&gt; is to same as &lt;code&gt;pull-journal.sh&lt;/code&gt; but in the other direction.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
echo &amp;quot;Pushing journal to gdrive ...&amp;quot;
rclone -v sync /&amp;lt;path&amp;gt;/&amp;lt;to&amp;gt;/&amp;lt;journal&amp;gt; &amp;lt;remote&amp;gt;:/&amp;lt;path&amp;gt;/&amp;lt;to&amp;gt;/&amp;lt;journal&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Both come together in &lt;code&gt;edit-journal.sh&lt;/code&gt;, which basicall pull the journal, then uses vim to edit it and afterwards pushes the journal back to my gdrive.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!bin/bash
./pull-journal.sh
&amp;quot;Editing the file ...&amp;quot;
vim $LEDGER_FILE
echo &amp;quot;&amp;quot;
./push-journal.sh`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I kept the push and pull split in cases that I wanna force synchronisation in a certain direction.&lt;/p&gt;

&lt;p&gt;On my mobile devices I just use some editor to modify the journal file. I can then later refactor it so it adheres to all the rules that (h)ledger require.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DSCP</title>
      <link>https://blog.francisbegyn.be/posts/dscp/</link>
      <pubDate>Sun, 25 Feb 2018 02:00:35 +0100</pubDate>
      
      <guid>https://blog.francisbegyn.be/posts/dscp/</guid>
      <description>&lt;p&gt;Current implementation for the ToS (Type of Service) field is split into 2 main parts: Express Congestion Notification (ECN) and Differentiated Services Codepoint (DSCP).
This article focusses on the DSCP field.&lt;/p&gt;

&lt;p&gt;In general you can use whatever DSCP value you like within you own network, but externally RFC 4594 describes how the DSCP value can be interpreted.
The RFC specifies 3 kinds of classes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;EF - Expidited Forwarding: Reserved for voice traffic&lt;/li&gt;
&lt;li&gt;AF - Assured Forwarding: Assured classed ranging from AF11 to AF43 (second number represents the drop probability)&lt;/li&gt;
&lt;li&gt;CS - Class Selector: backwards compatible with the initial Precedence values&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There&amp;rsquo;s a direct correlation between the numbers after AF, the DSCP value and the ToS. See the following example.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AF31    011(=3) 01(=1)
DSCP    011     01 0 = 26
ToS     011     01 0 00 = 104
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The DSCP value is the first 6 bits of the ToS field, so the conversion between DSCP and the ToS field is &lt;code&gt;&amp;lt;&amp;lt;2&lt;/code&gt; and visa versa &lt;code&gt;&amp;gt;&amp;gt;2&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vimrc as Sudo</title>
      <link>https://blog.francisbegyn.be/posts/vimrc-as-sudo/</link>
      <pubDate>Mon, 29 Jan 2018 14:01:08 +0100</pubDate>
      
      <guid>https://blog.francisbegyn.be/posts/vimrc-as-sudo/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve only recently discoverd the &lt;code&gt;-E&lt;/code&gt; flag for sudo. I keeps the current environment when going into sudo. I find &lt;code&gt;sudo -E vim ...&lt;/code&gt; particularly useful since it keeps all my precious vimrc settings when decending into the root regions of my system.&lt;/p&gt;

&lt;p&gt;Side note concerning vim: vim can edit remote files with &lt;code&gt;scp://&amp;lt;user&amp;gt;@&amp;lt;host&amp;gt;//&amp;lt;path&amp;gt;&lt;/code&gt;, although remember the permissions on the remote file!`&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker&#43;lxc: some nesting required</title>
      <link>https://blog.francisbegyn.be/posts/docker&#43;lxc/</link>
      <pubDate>Sun, 28 Jan 2018 10:49:32 +0000</pubDate>
      
      <guid>https://blog.francisbegyn.be/posts/docker&#43;lxc/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a huge fan of doing things with docker and lxc, but I&amp;rsquo;ve never tried to run them together or really had a need to do so. Recently I run into trouble doing exactly that, seems like my lxc configuration and docker really didn&amp;rsquo;t wanna play together.&lt;/p&gt;

&lt;p&gt;Every time I wanted to spin up a docker container inside an lxc container, it ran into problems whenever it had to mount filesystems. As it turns out, you need to enable nesting in the lxc container to make this work.&lt;/p&gt;

&lt;p&gt;First we need to stop the container if it&amp;rsquo;s running&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lxc stop &amp;lt;container&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After which we can modify to container configuration and start it back up&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lxc config set &amp;lt;container&amp;gt; security.nesting true
lxc start &amp;lt;container&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you know the container is gonna need nesting, you can also set it at creation&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lxc launch &amp;lt;image&amp;gt; -p &amp;lt;profile&amp;gt; &amp;lt;name&amp;gt; -c security.nesting true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In case the containers need to be priviliged, there&amp;rsquo;s the flag &lt;code&gt;security.privileged true&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>